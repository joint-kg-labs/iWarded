
% =====ORIGINAL VADA PROGRAM PARAMETERS=====
% Number of Input Atoms: 5
% Number of Output Atoms: 3
% Average number of Variables per Atom: 1
% Variance number of Variables per Atom: 1.0
% Number of Existential Rules: 3
% Average number of Existentially Quantified Variables per Rule: 1
% Variance of Existentially Quantified Variables per Rule: 1.0
% Number of Dangerous Rules: 3
% Number of Linear Rules: 6
% Number of Join Rules: 3
% Number of Harmless-Harmless Join Rules with Ward: 3
% Number of Harmless-Harmless Join Rules without Ward: 0
% Number of Harmless-Harmful Joins: 0
% Number of Harmful-Harmful Joins: 0
% Average number of Chase Steps: 2
% Number of Chase Steps for each Output Atom: 
% out_1->3; out_2->2; out_3->3; 
% Number of Linear Recursions: 1
% Number of Left Join Recursions: 1
% Number of Right Join Recursions: 0
% Number of Non-Linear Join Recursions: 0
% Average Recursion Length: 2
% Length for each Recursion: 
% leftJRec_1->3; linRec_1->3; 
% Number of Selection Conditions: 3
% Average Selectivity: 3
% Number of records in CSV files: 10
% Guardedness of the Program: false
% Name of the Program: tutorialProgram
% ==========================================

% =====ADAPTED VADA PROGRAM PARAMETERS=====
% Number of Input Atoms: 2
% Number of Linear Rules: 10
% Number of Harmless-Harmless Join Rules with Ward: 2
% Number of Harmless-Harmless Join Rules without Ward: 1
% ==========================================

@output("out_1").
@output("out_2").
@output("out_3").
@input("edb_1").
@bind("edb_1","csv","generatedPrograms/tutorialProgram","edb_1_csv.csv").
@mapping("edb_1",0,"arg_0","int").
@mapping("edb_1",1,"arg_1","int").
@input("edb_5").
@bind("edb_5","csv","generatedPrograms/tutorialProgram","edb_5_csv.csv").
@mapping("edb_5",0,"arg_0","int").
@mapping("edb_5",1,"arg_1","int").
idb_1(HARMLESS_1,HARMLESS_2) :- edb_1(HARMLESS_1,HARMLESS_2).
idb_2(HARMLESS_1,HARMFUL_1) :- idb_1(HARMLESS_1,HARMLESS_2), edb_5(HARMLESS_3,HARMLESS_2).
idb_3(HARMLESS_1) :- idb_2(HARMLESS_1,HARMFUL_1), edb_1(HARMLESS_4,HARMFUL_1).
idb_1(HARMLESS_1,HARMLESS_1) :- idb_3(HARMLESS_1), HARMLESS_1=37.
idb_1(HARMLESS_5,HARMLESS_1) :- idb_3(HARMLESS_1), edb_5(HARMLESS_5,HARMLESS_1).
idb_4(HARMLESS_1,HARMFUL_2) :- idb_1(HARMLESS_1,HARMLESS_2), HARMLESS_1>29.
idb_5(HARMLESS_1,HARMFUL_3) :- idb_2(HARMLESS_1,HARMFUL_1), HARMLESS_1>=40.
idb_6(HARMLESS_1,HARMFUL_1) :- idb_2(HARMLESS_1,HARMFUL_1).
idb_7(HARMLESS_1,HARMFUL_1) :- idb_2(HARMLESS_1,HARMFUL_1).
idb_8(HARMLESS_1,HARMFUL_1) :- idb_2(HARMLESS_1,HARMFUL_1).
out_1(HARMLESS_1) :- idb_2(HARMLESS_1,HARMFUL_1).
out_2(HARMLESS_1,HARMLESS_2) :- idb_1(HARMLESS_1,HARMLESS_2).
out_3(HARMLESS_1) :- idb_2(HARMLESS_1,HARMFUL_1).
